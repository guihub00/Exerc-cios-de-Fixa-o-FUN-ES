Exercícios de Fixação - FUNÇÕES

1.
a) CREATE TABLE nomes (
    nome VARCHAR(100)
);

INSERT INTO nomes (nome) VALUES
('Roberta'),
('Roberto'),
('Maria Clara'),
('João');

b)
UPDATE nomes
SET nome = UPPER(nome);

C)
SELECT nome, LENGTH(nome) AS tamanho
FROM nomes;

D)
UPDATE nomes
SET nome = CONCAT(
    CASE WHEN nome LIKE 'MARIA%' THEN 'Sra. ' ELSE 'Sr. ' END, nome
);
SELECT nome
FROM nomes;

2.
a) 
CREATE TABLE produtos (
    produto VARCHAR(100),
    preco DECIMAL(10, 2),
    quantidade INT
);

b)
SELECT produto, ROUND(preco, 2) AS preco_arredon, quantidade
FROM produtos;

c)
SELECT produto, ROUND(preco, 2) AS preco_arredondado, ABS(quantidade) AS quant_absoluta
FROM produtos;

d)
SELECT AVG(preco) AS media_precos
FROM produtos;

3.
a)
CREATE TABLE eventos (
    data_evento DATE
);

INSERT INTO eventos (data_evento) VALUES
('1678-11-01'),
('2000-01-25'),
('2018-03-12'),
('1869-05-15');

b)
INSERT INTO eventos (data_evento) VALUES (NOW());

c)
SELECT data_evento, DATEDIFF(NOW(), data_evento) AS diferenca_dias
FROM eventos;

d)
SELECT data_evento, DAYNAME(data_evento) AS dia_da_semana
FROM eventos;

4.
a)
SELECT produto, preco, quantidade,
       IF(quantidade > 0, 'Em estoque', 'Fora de estoque') AS status_estoque
FROM produto

b)
SELECT produto, preco, quantidade,
       CASE
           WHEN preco <= 10 THEN 'Barato'
           WHEN preco <= 50 THEN 'Médio'
           ELSE 'Caro'
       END AS categoria_preco
FROM produtos;

5.
a)
CREATE FUNCTION TOTAL_VALOR(preco DECIMAL(10, 2), quantidade INT) RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE total DECIMAL(10, 2);
    SET total = preco * quantidade;
    RETURN total;
END;

b)
SELECT produto, preco, quantidade, TOTAL_VALOR(preco, quantidade) AS valor_total
FROM produtos;

6.
a)
SELECT COUNT(*) AS total_de_produtos
FROM produtos;

b)
SELECT produto, preco
FROM produtos
WHERE preco = (SELECT MAX(preco) FROM produtos);

c)
SELECT produto, preco
FROM produtos
WHERE preco = (SELECT MIN(preco) FROM produtos);

d)
SELECT SUM(IF(quantidade > 0, preco * quantidade, 0)) AS soma_total_em_estoque
FROM produtos;



